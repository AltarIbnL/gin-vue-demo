{"ast":null,"code":"require(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.string.replace.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nexports.config = function (api, preset) {\n  var rootOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var config = {\n    root: true,\n    env: {\n      node: true\n    },\n    extends: ['plugin:vue/essential'],\n    parserOptions: {\n      ecmaVersion: 2020\n    },\n    rules: {\n      'no-console': makeJSOnlyValue(\"process.env.NODE_ENV === 'production' ? 'warn' : 'off'\"),\n      'no-debugger': makeJSOnlyValue(\"process.env.NODE_ENV === 'production' ? 'warn' : 'off'\")\n    }\n  };\n\n  if (api.hasPlugin('babel') && !api.hasPlugin('typescript')) {\n    config.parserOptions = {\n      parser: '@babel/eslint-parser'\n    };\n  }\n\n  if (preset === 'airbnb') {\n    config.extends.push('@vue/airbnb');\n  } else if (preset === 'standard') {\n    config.extends.push('@vue/standard');\n  } else if (preset === 'prettier') {\n    var _config$extends;\n\n    (_config$extends = config.extends).push.apply(_config$extends, ['eslint:recommended', 'plugin:prettier/recommended']);\n  } else {\n    // default\n    config.extends.push('eslint:recommended');\n  }\n\n  if (api.hasPlugin('typescript')) {\n    // typically, typescript ruleset should be appended to the end of the `extends` array\n    // but that is not the case for prettier, as there are conflicting rules\n    if (preset === 'prettier') {\n      var _config$extends2;\n\n      config.extends.pop();\n\n      (_config$extends2 = config.extends).push.apply(_config$extends2, ['@vue/typescript/recommended', 'plugin:prettier/recommended']);\n    } else {\n      config.extends.push('@vue/typescript/recommended');\n    }\n  }\n\n  if (rootOptions.vueVersion === '3') {\n    var updateConfig = function updateConfig(cfg) {\n      return cfg.replace(/plugin:vue\\/(essential|recommended|strongly-recommended)/gi, 'plugin:vue/vue3-$1');\n    };\n\n    config.extends = config.extends.map(updateConfig);\n  }\n\n  return config;\n}; // __expression is a special flag that allows us to customize stringification\n// output when extracting configs into standalone files\n\n\nfunction makeJSOnlyValue(str) {\n  var fn = function fn() {};\n\n  fn.__expression = str;\n  return fn;\n}\n\nvar baseExtensions = ['.js', '.jsx', '.vue'];\n\nexports.extensions = function (api) {\n  return api.hasPlugin('typescript') ? baseExtensions.concat('.ts', '.tsx') : baseExtensions;\n};","map":{"version":3,"names":["exports","config","api","preset","rootOptions","root","env","node","extends","parserOptions","ecmaVersion","rules","makeJSOnlyValue","hasPlugin","parser","push","pop","vueVersion","updateConfig","cfg","replace","map","str","fn","__expression","baseExtensions","extensions","concat"],"sources":["E:/seafile/file/GO/pratical_practice/vue/vue/node_modules/@vue/cli-plugin-eslint/eslintOptions.js"],"sourcesContent":["exports.config = (api, preset, rootOptions = {}) => {\n  const config = {\n    root: true,\n    env: { node: true },\n    extends: ['plugin:vue/essential'],\n    parserOptions: {\n      ecmaVersion: 2020\n    },\n    rules: {\n      'no-console': makeJSOnlyValue(`process.env.NODE_ENV === 'production' ? 'warn' : 'off'`),\n      'no-debugger': makeJSOnlyValue(`process.env.NODE_ENV === 'production' ? 'warn' : 'off'`)\n    }\n  }\n\n  if (api.hasPlugin('babel') && !api.hasPlugin('typescript')) {\n    config.parserOptions = {\n      parser: '@babel/eslint-parser'\n    }\n  }\n\n  if (preset === 'airbnb') {\n    config.extends.push('@vue/airbnb')\n  } else if (preset === 'standard') {\n    config.extends.push('@vue/standard')\n  } else if (preset === 'prettier') {\n    config.extends.push(...['eslint:recommended', 'plugin:prettier/recommended'])\n  } else {\n    // default\n    config.extends.push('eslint:recommended')\n  }\n\n  if (api.hasPlugin('typescript')) {\n    // typically, typescript ruleset should be appended to the end of the `extends` array\n    // but that is not the case for prettier, as there are conflicting rules\n    if (preset === 'prettier') {\n      config.extends.pop()\n      config.extends.push(...['@vue/typescript/recommended', 'plugin:prettier/recommended'])\n    } else {\n      config.extends.push('@vue/typescript/recommended')\n    }\n  }\n\n  if (rootOptions.vueVersion === '3') {\n    const updateConfig = cfg =>\n      cfg.replace(\n        /plugin:vue\\/(essential|recommended|strongly-recommended)/gi,\n        'plugin:vue/vue3-$1'\n      )\n    config.extends = config.extends.map(updateConfig)\n  }\n\n  return config\n}\n\n// __expression is a special flag that allows us to customize stringification\n// output when extracting configs into standalone files\nfunction makeJSOnlyValue (str) {\n  const fn = () => {}\n  fn.__expression = str\n  return fn\n}\n\nconst baseExtensions = ['.js', '.jsx', '.vue']\nexports.extensions = api => api.hasPlugin('typescript')\n  ? baseExtensions.concat('.ts', '.tsx')\n  : baseExtensions\n"],"mappings":";;;;;;;;AAAAA,OAAO,CAACC,MAAR,GAAiB,UAACC,GAAD,EAAMC,MAAN,EAAmC;EAAA,IAArBC,WAAqB,uEAAP,EAAO;EAClD,IAAMH,MAAM,GAAG;IACbI,IAAI,EAAE,IADO;IAEbC,GAAG,EAAE;MAAEC,IAAI,EAAE;IAAR,CAFQ;IAGbC,OAAO,EAAE,CAAC,sBAAD,CAHI;IAIbC,aAAa,EAAE;MACbC,WAAW,EAAE;IADA,CAJF;IAObC,KAAK,EAAE;MACL,cAAcC,eAAe,0DADxB;MAEL,eAAeA,eAAe;IAFzB;EAPM,CAAf;;EAaA,IAAIV,GAAG,CAACW,SAAJ,CAAc,OAAd,KAA0B,CAACX,GAAG,CAACW,SAAJ,CAAc,YAAd,CAA/B,EAA4D;IAC1DZ,MAAM,CAACQ,aAAP,GAAuB;MACrBK,MAAM,EAAE;IADa,CAAvB;EAGD;;EAED,IAAIX,MAAM,KAAK,QAAf,EAAyB;IACvBF,MAAM,CAACO,OAAP,CAAeO,IAAf,CAAoB,aAApB;EACD,CAFD,MAEO,IAAIZ,MAAM,KAAK,UAAf,EAA2B;IAChCF,MAAM,CAACO,OAAP,CAAeO,IAAf,CAAoB,eAApB;EACD,CAFM,MAEA,IAAIZ,MAAM,KAAK,UAAf,EAA2B;IAAA;;IAChC,mBAAAF,MAAM,CAACO,OAAP,EAAeO,IAAf,wBAAuB,CAAC,oBAAD,EAAuB,6BAAvB,CAAvB;EACD,CAFM,MAEA;IACL;IACAd,MAAM,CAACO,OAAP,CAAeO,IAAf,CAAoB,oBAApB;EACD;;EAED,IAAIb,GAAG,CAACW,SAAJ,CAAc,YAAd,CAAJ,EAAiC;IAC/B;IACA;IACA,IAAIV,MAAM,KAAK,UAAf,EAA2B;MAAA;;MACzBF,MAAM,CAACO,OAAP,CAAeQ,GAAf;;MACA,oBAAAf,MAAM,CAACO,OAAP,EAAeO,IAAf,yBAAuB,CAAC,6BAAD,EAAgC,6BAAhC,CAAvB;IACD,CAHD,MAGO;MACLd,MAAM,CAACO,OAAP,CAAeO,IAAf,CAAoB,6BAApB;IACD;EACF;;EAED,IAAIX,WAAW,CAACa,UAAZ,KAA2B,GAA/B,EAAoC;IAClC,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,GAAG;MAAA,OACtBA,GAAG,CAACC,OAAJ,CACE,4DADF,EAEE,oBAFF,CADsB;IAAA,CAAxB;;IAKAnB,MAAM,CAACO,OAAP,GAAiBP,MAAM,CAACO,OAAP,CAAea,GAAf,CAAmBH,YAAnB,CAAjB;EACD;;EAED,OAAOjB,MAAP;AACD,CApDD,C,CAsDA;AACA;;;AACA,SAASW,eAAT,CAA0BU,GAA1B,EAA+B;EAC7B,IAAMC,EAAE,GAAG,SAALA,EAAK,GAAM,CAAE,CAAnB;;EACAA,EAAE,CAACC,YAAH,GAAkBF,GAAlB;EACA,OAAOC,EAAP;AACD;;AAED,IAAME,cAAc,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,MAAhB,CAAvB;;AACAzB,OAAO,CAAC0B,UAAR,GAAqB,UAAAxB,GAAG;EAAA,OAAIA,GAAG,CAACW,SAAJ,CAAc,YAAd,IACxBY,cAAc,CAACE,MAAf,CAAsB,KAAtB,EAA6B,MAA7B,CADwB,GAExBF,cAFoB;AAAA,CAAxB"},"metadata":{},"sourceType":"script"}