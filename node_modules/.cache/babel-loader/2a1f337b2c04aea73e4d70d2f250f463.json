{"ast":null,"code":"import _objectSpread from \"E:/seafile/file/GO/pratical_practice/vue/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// eslint-disable-next-line import/no-extraneous-dependencies\n// import { required, minLength,maxLength } from 'vuelidate/lib/validators';\nimport { required, minLength } from 'vuelidate/lib/validators';\nimport { mapMutations, mapActions } from 'vuex'; // const telephoneValidator = (value) => /^\\d(11)$/.test(value);\n\nimport customValidator from '@/helper/validator';\nexport default {\n  data: function data() {\n    return {\n      user: {\n        name: '',\n        telephone: '',\n        password: ''\n      },\n      validation: null\n    };\n  },\n  // vuelidate来验证当前的密码为多少位\n  validations: {\n    user: {\n      telephone: {\n        required: required,\n        telephone: customValidator.telephoneValidator // minLength: minLength(11),\n        // maxLength: maxLength(11),\n\n      },\n      password: {\n        required: required,\n        minLength: minLength(6)\n      }\n    }\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions('userModule', {\n    userLogin: 'login'\n  })), {}, {\n    validateState: function validateState(name) {\n      // 这里是es6 解构赋值\n      var _this$$v$user$name = this.$v.user[name],\n          $dirty = _this$$v$user$name.$dirty,\n          $error = _this$$v$user$name.$error;\n      return $dirty ? !$error : null;\n    },\n    login: function login() {\n      var _this = this;\n\n      this.userLogin(this.user).then(function () {\n        // 跳转主页\n        _this.$router.replace({\n          name: 'home'\n        });\n      }).catch(function (err) {\n        // 跳转失败,并出现弹窗显示数据验证失败\n        console.log('err:', err.response.data.msg);\n\n        _this.$bvToast.toast(err.response.data.msg, {\n          title: '数据验证错误',\n          variant: 'danger',\n          solid: true\n        });\n      });\n      console.log('login');\n    }\n  })\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA,gD,CACA;;AACA;AACA;EACAA,IADA,kBACA;IACA;MACAC;QACAC,QADA;QAEAC,aAFA;QAGAC;MAHA,CADA;MAMAC;IANA;EAQA,CAVA;EAWA;EACAC;IACAL;MACAE;QACAI,kBADA;QAEAJ,6CAFA,CAGA;QACA;;MAJA,CADA;MAOAC;QACAG,kBADA;QAEAC;MAFA;IAPA;EADA,CAZA;EA0BAC,yCACAC;IAAAC;EAAA,EADA;IAEAC,aAFA,yBAEAV,IAFA,EAEA;MACA;MACA;MAAA;MAAA;MACA;IACA,CANA;IAOAW,KAPA,mBAOA;MAAA;;MACA;QACA;QACA;UAAAX;QAAA;MACA,CAHA,EAGAY,KAHA,CAGA;QACA;QACAC;;QACA;UACAC,eADA;UAEAC,iBAFA;UAGAC;QAHA;MAKA,CAXA;MAYAH;IACA;EArBA;AA1BA","names":["data","user","name","telephone","password","validation","validations","required","minLength","methods","mapActions","userLogin","validateState","login","catch","console","title","variant","solid"],"sourceRoot":"src/views/Login","sources":["Login.vue"],"sourcesContent":["<template>\n  <div class=\"register\">\n    <b-row class=\"mt-5\">\n      <b-col md=\"8\" offset-md=\"2\" lg=\"6\" offset-lg=\"3\">\n        <b-card title=\"登陆\">\n          <b-form >\n            <b-form-group label=\"手机号\">\n              <b-form-input\n                v-model=\"$v.user.telephone.$model\"\n                type=\"number\"\n                required\n                placeholder=\"输入手机号\"\n                :state=\"validateState('telephone')\"\n              ></b-form-input>\n              <b-form-invalid-feedback :state=\"validateState('telephone')\">\n                手机号必须为11位\n              </b-form-invalid-feedback>\n            </b-form-group>\n            <b-form-group label=\"密码\">\n              <b-form-input\n                v-model=\"$v.user.password.$model\"\n                type=\"password\"\n                required\n                placeholder=\"输入您的密码\"\n                :state=\"validateState('password')\"\n              ></b-form-input>\n              <b-form-invalid-feedback :state=\"validateState('password')\">\n                密码必须大于等于6位\n              </b-form-invalid-feedback>\n            </b-form-group>\n            <b-form-group>\n              <b-button @click=\"register\" variant=\"primary\" block>登陆</b-button>  <!-- block让按钮占满容器-->\n            </b-form-group>\n          </b-form>\n        </b-card>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n<script>\n// eslint-disable-next-line import/no-extraneous-dependencies\n// import { required, minLength,maxLength } from 'vuelidate/lib/validators';\nimport { required, minLength } from 'vuelidate/lib/validators';\nimport {mapMutations,mapActions} from 'vuex';\n// const telephoneValidator = (value) => /^\\d(11)$/.test(value);\nimport customValidator from '@/helper/validator';\nexport default {\n  data() {\n    return {\n      user: {\n        name: '',\n        telephone: '',\n        password: '',\n      },\n      validation: null,\n    };\n  },\n  // vuelidate来验证当前的密码为多少位\n  validations: {\n    user: {\n      telephone: {\n        required,\n        telephone: customValidator.telephoneValidator,\n        // minLength: minLength(11),\n        // maxLength: maxLength(11),\n      },\n      password: {\n        required,\n        minLength: minLength(6),\n      },\n    },\n  },\n  methods: {\n    ...mapActions('userModule',{userLogin: 'login' }),\n    validateState(name) {\n      // 这里是es6 解构赋值\n      const { $dirty, $error } = this.$v.user[name];\n      return $dirty ? !$error : null;\n    },\n    login() {\n      this.userLogin(this.user).then(() => {\n        // 跳转主页\n        this.$router.replace({ name: 'home' });\n      }).catch((err) => {\n        // 跳转失败,并出现弹窗显示数据验证失败\n        console.log('err:', err.response.data.msg);\n        this.$bvToast.toast(err.response.data.msg, {\n          title: '数据验证错误',\n          variant: 'danger',\n          solid: true,\n        });\n      });\n      console.log('login');\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module"}