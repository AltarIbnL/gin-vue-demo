{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { required, minLength, maxLength } from 'vuelidate/lib/validators';\nexport default {\n  data: function data() {\n    return {\n      user: {\n        name: '',\n        telephone: '',\n        password: ''\n      },\n      validation: null\n    };\n  },\n  // vuelidate来验证当前的密码为多少位\n  validations: {\n    user: {\n      name: {},\n      telephone: {\n        required: required,\n        minLength: minLength(11),\n        maxLength: maxLength(11)\n      },\n      password: {\n        required: required,\n        minLength: minLength(6)\n      }\n    }\n  },\n  methods: {\n    validateState: function validateState(name) {\n      // 这里是es6 解构赋值\n      var _this$$v$user$name = this.$v.user[name],\n          $dirty = _this$$v$user$name.$dirty,\n          $error = _this$$v$user$name.$error;\n      return $dirty ? !$error : null;\n    },\n    register: function register() {\n      // eslint-disable-next-line max-len\n      if (this.user.telephone.length !== 11) {\n        // 在初始validation为 null 表示不显示，如果判断长度不为11位则为false，为11位则变为true\n        this.validation = false;\n        return;\n      }\n\n      this.validation = true;\n      console.log('register');\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AAEA;EACAA,IADA,kBACA;IACA;MACAC;QACAC,QADA;QAEAC,aAFA;QAGAC;MAHA,CADA;MAMAC;IANA;EAQA,CAVA;EAWA;EACAC;IACAL;MACAC,QADA;MAGAC;QACAI,kBADA;QAEAC,wBAFA;QAGAC;MAHA,CAHA;MAQAL;QACAG,kBADA;QAEAC;MAFA;IARA;EADA,CAZA;EA2BAE;IACAC,aADA,yBACAT,IADA,EACA;MACA;MACA;MAAA;MAAA;MACA;IACA,CALA;IAMAU,QANA,sBAMA;MACA;MACA;QAAA;QACA;QACA;MACA;;MACA;MAEAC;IACA;EAfA;AA3BA","names":["data","user","name","telephone","password","validation","validations","required","minLength","maxLength","methods","validateState","register","console"],"sourceRoot":"src/views/Register","sources":["Register.vue"],"sourcesContent":["<template>\n  <div class=\"register\">\n    <b-row class=\"mt-5\">\n      <b-col md=\"8\" offset-md=\"2\" lg=\"6\" offset-lg=\"3\">\n    <b-card title=\"注册\">\n    <b-form >\n      <b-form-group label=\"姓名\">\n        <!-- 定义一个v的对象，根据我们定义的validation生成了属性，每个属性都有自己的model  -->\n       <b-form-input\n          v-model=\"$v.user.name.$model\"\n          type=\"text\"\n          required\n          placeholder=\"输入用户的名称(选填)\"\n        ></b-form-input>\n      </b-form-group>\n      <b-form-group label=\"手机号\">\n        <b-form-input\n          v-model=\"$v.user.telephone.$model\"\n          type=\"number\"\n          required\n          placeholder=\"输入手机号\"\n          :state=\"validateState('telephone')\"\n        ></b-form-input>\n        <b-form-invalid-feedback :state=\"validateState('telephone')\">\n          手机号必须为11位\n        </b-form-invalid-feedback>\n      </b-form-group>\n      <b-form-group label=\"密码\">\n        <b-form-input\n          v-model=\"$v.user.password.$model\"\n          type=\"password\"\n          required\n          placeholder=\"输入您的密码\"\n          :state=\"validateState('password')\"\n        ></b-form-input>\n        <b-form-invalid-feedback :state=\"validateState('password')\">\n          密码必须大于等于6位\n        </b-form-invalid-feedback>\n      </b-form-group>\n      <b-form-group>\n       <b-button @click=\"register\" variant=\"primary\" block>注册</b-button>  <!-- block让按钮占满容器-->\n      </b-form-group>\n    </b-form>\n    </b-card>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n<script>\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { required, minLength, maxLength } from 'vuelidate/lib/validators';\n\nexport default {\n  data() {\n    return {\n      user: {\n        name: '',\n        telephone: '',\n        password: '',\n      },\n      validation: null,\n    };\n  },\n  // vuelidate来验证当前的密码为多少位\n  validations: {\n    user: {\n      name: {\n      },\n      telephone: {\n        required,\n        minLength: minLength(11),\n        maxLength: maxLength(11),\n      },\n      password: {\n        required,\n        minLength: minLength(6),\n      },\n    },\n  },\n  methods: {\n    validateState(name) {\n      // 这里是es6 解构赋值\n      const { $dirty, $error } = this.$v.user[name];\n      return $dirty ? !$error : null;\n    },\n    register() {\n      // eslint-disable-next-line max-len\n      if (this.user.telephone.length !== 11) { // 在初始validation为 null 表示不显示，如果判断长度不为11位则为false，为11位则变为true\n        this.validation = false;\n        return;\n      }\n      this.validation = true;\n\n      console.log('register');\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module"}